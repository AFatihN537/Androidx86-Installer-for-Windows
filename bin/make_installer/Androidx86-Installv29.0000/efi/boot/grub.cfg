set timeout=30
set live=BlissOS
set ver=BLISS_VER
set debug_mode="Live DEBUG mode"

set kdir=/AndroidOS
search --file --no-floppy --set=root /EFI/boot/grubx64.efi

# $1 Kernel dir
# $2 Title
# $3... Kernel cmdline
function add_boot_entry {
	menuentry "$2" "$@" --class android-x86 {
		#savedefault
		search --file --no-floppy --set=root /AndroidOS/android.boot
		
		shift 3
		linux $kdir/kernel root=/dev/ram0 $s $@
		initrd $kdir/initrd.img 
	}
}

# $1 Title
# $2... Kernel cmdline
function add_entry {
	set kdir=/AndroidOS
	set title="$1-$ver"
	shift 1
	add_boot_entry "$kdir" "$title" "$@"
}

# $1 EFI to chainload
# $2 OS name
# $3 Class
function add_os_if_exists {
	# Is there a better way to find ESP?
	#for d in hd0,gpt1 hd0,gpt2 hd1,gpt1 hd1,gpt2 hd0,msdos1 hd0,msdos2 hd1,msdos1 hd1,msdos2; do
	search --file --no-floppy --set=d $1
		if [ -s ($d)$1 ]; then
			menuentry "$2 at $d ->" "$d" "$1" --class "$3" {
				#savedefault
				set root=$2
				chainloader ($root)$3
			}
			#break
		fi
	#done
}

/* function savedefault {
	if [ -s $prefix/grubenv -a "$chosen" != "$default" ]; then
		set default="$chosen"
		save_env default
	fi
} */

function load_theme {
	loadfont dejavu_14 terminus-14
	set gfxmode=1024x768
	terminal_output gfxterm
	set theme=$prefix/theme/theme.txt
	export theme
}

if [ "$root" == "loop0" ]; then
	set prefix=($root)/boot/grub
fi

if [ -s $prefix/theme/theme.txt ]; then
	load_theme
fi

#if [ -s $prefix/grubenv ]; then
	#load_env
#fi

search --no-floppy --set android -f $kdir/kernel

# Create main menu
add_entry "$live" quiet
add_entry "$live (Default) w/ FFMPEG" quiet FFMPEG_CODEC=1 FFMPEG_PREFER_C2=1
add_entry "$live (Intel) w/ FFMPEG" quiet HWC=drm_minigbm_celadon GRALLOC=minigbm FFMPEG_CODEC=1 FFMPEG_PREFER_C2=1
add_entry "$live PC-Mode (Default)" quiet PC_MODE=1
add_entry "$live PC-Mode (Default) w/ FFMPEG" quiet PC_MODE=1 FFMPEG_CODEC=1 FFMPEG_PREFER_C2=1 
add_entry "$live PC-Mode (Intel)" quiet PC_MODE=1 HWC=drm_minigbm_celadon GRALLOC=minigbm
add_entry "$live PC-Mode (Intel) w/ FFMPEG" quiet PC_MODE=1 HWC=drm_minigbm_celadon GRALLOC=minigbm FFMPEG_CODEC=1 FFMPEG_PREFER_C2=1
add_os_if_exists /EFI/Microsoft/Boot/bootmgfw.efi Windows windows

submenu "VM Options -> " --class forward {
	add_entry "$live - QEMU/KVM - Virgl - SW-FFMPEG" quiet HWC=drm_minigbm GRALLOC=minigbm_arcvm
	add_entry "$live - Vbox/VMWare - No HW Acceleration" quiet nomodeset HWACCEL=0
	add_entry "$live - Debug QEMU/KVM - Virgl - SW-FFMPEG" DEBUG=2 HWC=drm_minigbm GRALLOC=minigbm_arcvm FFMPEG_HWACCEL_DISABLE=1
	add_entry "$live - Debug Vbox/VMWare - No HW Acceleration" DEBUG=2 nomodeset HWACCEL=0
}

submenu "Debugging -> " --class forward {
	add_entry "$live - Debug" DEBUG=2
	add_entry "$live - Debug gralloc.gbm" DEBUG=2 GRALLOC=gbm
	add_entry "$live - Debug drmfb-composer" DEBUG=2 HWC=drmfb GRALLOC=gbm
	add_entry "$live - Debug hwcomposer.drm" DEBUG=2 HWC=drm GRALLOC=gbm
	add_entry "$live - Debug gralloc.minigbm" DEBUG=2 GRALLOC=minigbm
	add_entry "$live - Debug gralloc.minigbm_gbm_mesa" DEBUG=2 HWC=drm_minigbm GRALLOC=minigbm_gbm_mesa
	add_entry "$live - Debug hwcomposer.drm_minigbm" DEBUG=2 HWC=drm_minigbm GRALLOC=minigbm
	add_entry "$live - Debug hwcomposer.drm_minigbm_celadon" DEBUG=2 HWC=drm_minigbm_celadon GRALLOC=minigbm
	add_entry "$live - Debug hwcomposer.intel" DEBUG=2 HWC=intel GRALLOC=intel
}

submenu "Advanced options -> " --class forward {
	#add_entry "$live - No Setup Wizard" quiet SETUPWIZARD=0
	add_entry "$live - No Hardware Acceleration" quiet nomodeset HWACCEL=0
	menuentry "Reboot" --class reboot { reboot }
	menuentry "Poweroff" --class shutdown { halt }
	menuentry "UEFI firmware settings" --class setup { fwsetup }
}

# Add other OSes boot loaders if exist
#add_os_if_exists /EFI/fedora/${grub}.efi Fedora fedora
#add_os_if_exists /EFI/centos/${grub}.efi CentOS centos
#add_os_if_exists /EFI/ubuntu/${grub}.efi Ubuntu ubuntu
#add_os_if_exists /EFI/debian/${grub}.efi Debian debian
#add_os_if_exists /EFI/gentoo/${grub}.efi Gentoo gentoo
#add_os_if_exists /EFI/opensuse/${grub}.efi openSUSE opensuse
#add_os_if_exists /EFI/linuxmint/${grub}.efi "Linux Mint" linuxmint
#add_os_if_exists /EFI/boto/bootx64.efi OPENTHOS openthos
#add_os_if_exists /EFI/Microsoft/Boot/bootmgfw.efi Windows windows

#for d in $cmdpath $prefix; do
	#if [ -f $d/custom.cfg ]; then
		#source $d/custom.cfg
	#fi
#done
